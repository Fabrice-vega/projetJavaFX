DROP TABLE PROJ_CLASSES CASCADE CONSTRAINTS;

DROP TABLE PROJ_ENSEIGNANT CASCADE CONSTRAINTS;

DROP TABLE PROJ_ATTRIBUTION CASCADE CONSTRAINTS;

DROP PROCEDURE PROJ_AJOUTCLASSE;

DROP PROCEDURE PROJ_AJOUTENSEIGNANT;

DROP PROCEDURE PROJ_AJOUTATTRIBUTION;

DROP PROCEDURE PROJ_SUPCLASSE;

DROP PROCEDURE PROJ_SUPENSEIGNANT;

DROP PROCEDURE PROJ_SUPATTRIBUTION;

DROP PROCEDURE PROJ_MAJCLASSE;

DROP PROCEDURE PROJ_MAJENSEIGNANT;

DROP SEQUENCE IDCLASSE_SEQ;

DROP SEQUENCE IDENSEIGNANT_SEQ;

DROP SEQUENCE IDATTRIBUTION_SEQ;
-- -----------------------------------------------------------------------------
--       TABLE : PROJ_CLASSE
-- -----------------------------------------------------------------------------

CREATE TABLE PROJ_CLASSES
(
  ID		  NUMBER(2)	   NOT NULL,
  SIGLE       VARCHAR2(2)  NOT NULL UNIQUE,
  ANNEE       NUMBER(1)    NOT NULL,
  ORIENTATION VARCHAR2(50) NOT NULL
  ,
  CONSTRAINT PK_PROJ_CLASSES PRIMARY KEY (ID)
);

CREATE SEQUENCE idClasse_seq START WITH 1;
CREATE OR REPLACE TRIGGER idClasse_trig
BEFORE INSERT ON PROJ_CLASSES
FOR EACH ROW 

BEGIN
	SELECT idClasse_seq.NEXTVAL
	INTO :new.ID
	FROM DUAL;
END;
/

-- -----------------------------------------------------------------------------
--       TABLE : PROJ_ENSEIGNANT
-- -----------------------------------------------------------------------------

CREATE TABLE PROJ_ENSEIGNANT
(
  ID			   NUMBER(2)    	NOT NULL,
  ID_PROF          VARCHAR2(4)    	UNIQUE NOT NULL,
  ID_TITULAIRE     NUMBER(2)  		NULL,
  ID_REMPLACANT    NUMBER(2)  		NULL,
  NOM              VARCHAR2(50) 	NOT NULL,
  PRENOM           VARCHAR2(50) 	NOT NULL,
  CONSTRAINT PK_PROJ_ENSEIGNANT PRIMARY KEY (ID)
);

CREATE SEQUENCE idEnseignant_seq START WITH 1;
CREATE OR REPLACE TRIGGER idEnseignant_trig
BEFORE INSERT ON PROJ_ENSEIGNANT
FOR EACH ROW 

BEGIN
	SELECT idEnseignant_seq.NEXTVAL
	INTO :new.ID
	FROM DUAL;
END;
/
-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE PROJ_ENSEIGNANT
-- -----------------------------------------------------------------------------

CREATE INDEX I_FK_PROJ_ENSEIGNANT_PROJ_CLAS
  ON PROJ_ENSEIGNANT (ID_TITULAIRE ASC);

CREATE INDEX I_FK_PROJ_ENSEIGNANT_PROJ_CLA1
  ON PROJ_ENSEIGNANT (ID_REMPLACANT ASC);

-- -----------------------------------------------------------------------------
--       TABLE : PROJ_ATTRIBUTION
-- -----------------------------------------------------------------------------

CREATE TABLE PROJ_ATTRIBUTION
(
  ID		NUMBER(2) NOT NULL,
  ID_PROF	NUMBER(2) NOT NULL UNIQUE,
  ID_CLASSE NUMBER(2) NOT NULL
  ,
  CONSTRAINT PK_PROJ_ATTRIBUTION PRIMARY KEY (ID)
);

CREATE SEQUENCE idAttribution_seq START WITH 1;
CREATE OR REPLACE TRIGGER idAttribution_trig
BEFORE INSERT ON PROJ_ATTRIBUTION
FOR EACH ROW 

BEGIN
	SELECT idAttribution_seq.NEXTVAL
	INTO :new.ID
	FROM DUAL;
END;
/

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE PROJ_ATTRIBUTION
-- -----------------------------------------------------------------------------

CREATE INDEX I_FK_PROJ_ATTRIBUTION_PROJ_ENS
  ON PROJ_ATTRIBUTION (ID_PROF ASC);

CREATE INDEX I_FK_PROJ_ATTRIBUTION_PROJ_CLA
  ON PROJ_ATTRIBUTION (ID_CLASSE ASC);

-- -----------------------------------------------------------------------------
--       CREATION DES REFERENCES DE TABLE
-- -----------------------------------------------------------------------------


ALTER TABLE PROJ_ENSEIGNANT
  ADD (
  CONSTRAINT FK_PROJ_ENS_PROJ_CLA_TITU
  FOREIGN KEY (ID_TITULAIRE)
  REFERENCES PROJ_CLASSES (ID));

ALTER TABLE PROJ_ENSEIGNANT
  ADD (
  CONSTRAINT FK_PROJ_ENS_PROJ_CLA_REMP
  FOREIGN KEY (ID_REMPLACANT)
  REFERENCES PROJ_CLASSES (ID));

ALTER TABLE PROJ_ATTRIBUTION
  ADD (
  CONSTRAINT FK_PROJ_ATTR_PROJ_ENSEI_MATR
  FOREIGN KEY (ID_PROF)
  REFERENCES PROJ_ENSEIGNANT (ID));

ALTER TABLE PROJ_ATTRIBUTION
  ADD (
  CONSTRAINT FK_PROJ_ATTR_PROJ_CLA_SIGL
  FOREIGN KEY (ID_CLASSE)
  REFERENCES PROJ_CLASSES (ID));

-- -----------------------------------------------------------------------------
--                CREATION DE LA CONSTRAINT XOR
-- -----------------------------------------------------------------------------


ALTER TABLE PROJ_ENSEIGNANT
  ADD (
  CONSTRAINT CH_PARTITION
  CHECK ((ID_TITULAIRE IS NULL AND ID_REMPLACANT IS NOT NULL) OR
         (ID_TITULAIRE IS NOT NULL AND ID_REMPLACANT IS NULL) OR
         (ID_TITULAIRE IS NULL AND ID_REMPLACANT IS NULL))
  );

-- -----------------------------------------------------------------------------
--				INSERTION DANS LES TABLES
-- -----------------------------------------------------------------------------

INSERT INTO PROJ_CLASSES (SIGLE, ANNEE, ORIENTATION) VALUES('1I', 1, 'INFO');
INSERT INTO PROJ_CLASSES (SIGLE, ANNEE, ORIENTATION) VALUES('2I', 2, 'INFO');
INSERT INTO PROJ_CLASSES (SIGLE, ANNEE, ORIENTATION) VALUES('3I', 3, 'INFO');


INSERT INTO PROJ_ENSEIGNANT(ID_PROF, NOM, PRENOM) VALUES('DUPA', 'DURAND', 'PAUL');
INSERT INTO PROJ_ENSEIGNANT(ID_PROF, NOM, PRENOM) VALUES('DUTO', 'DUPONT', 'TOM');
INSERT INTO PROJ_ENSEIGNANT(ID_PROF, NOM, PRENOM) VALUES('BELE', 'BERNARD', 'LEON');

-- -----------------------------------------------------------------------------
--				CREATION DES PROCEDURE ET FONCTIONS EMBARQUEES
-- -----------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE PROJ_AJOUTCLASSE(SIGLE PROJ_CLASSES.SIGLE%TYPE, ANNEE PROJ_CLASSES.ANNEE%TYPE, ORIENTATION PROJ_CLASSES.ORIENTATION%TYPE)

IS

BEGIN

    INSERT INTO PROJ_CLASSES(SIGLE, ANNEE, ORIENTATION) VALUES(SIGLE, ANNEE, ORIENTATION);
    COMMIT;

END;

/
CREATE OR REPLACE PROCEDURE PROJ_AJOUTENSEIGNANT(ID_PROF PROJ_ENSEIGNANT.ID_PROF%TYPE, NOM PROJ_ENSEIGNANT.NOM%TYPE, PRENOM PROJ_ENSEIGNANT.PRENOM%TYPE)

IS

BEGIN

    INSERT INTO PROJ_ENSEIGNANT(ID_PROF, NOM, PRENOM) VALUES(ID_PROF, NOM, PRENOM);
    COMMIT;

END;

/
CREATE OR REPLACE PROCEDURE PROJ_SUPCLASSE(DELSIGLE PROJ_CLASSES.SIGLE%TYPE)

IS

  BEGIN

    DELETE FROM PROJ_CLASSES WHERE SIGLE = DELSIGLE;
    COMMIT;

  END;

/
CREATE OR REPLACE PROCEDURE PROJ_SUPENSEIGNANT(DELID_PROF PROJ_ENSEIGNANT.ID_PROF%TYPE)

IS

  BEGIN

    DELETE FROM PROJ_ENSEIGNANT WHERE ID_PROF = DELID_PROF;
    COMMIT;

  END;

/
CREATE OR REPLACE PROCEDURE PROJ_AJOUTATTRIBUTION(ID_PROF PROJ_ENSEIGNANT.ID_PROF%TYPE, SIGLE PROJ_CLASSES.SIGLE%TYPE)

IS

  BEGIN

    INSERT INTO PROJ_ATTRIBUTION(ID_PROF, ID_CLASSE) VALUES(ID_PROF, SIGLE);
    COMMIT;

  END;

/
CREATE OR REPLACE PROCEDURE PROJ_SUPATTRIBUTION(DELID_PROF PROJ_ENSEIGNANT.ID_PROF%TYPE, DELSIGLE PROJ_CLASSES.SIGLE%TYPE)

IS

  BEGIN

    DELETE FROM PROJ_ATTRIBUTION WHERE ID_PROF = DELID_PROF AND ID_CLASSE = DELSIGLE;
    COMMIT;

  END;

/
CREATE OR REPLACE PROCEDURE PROJ_MAJCLASSE(UPDSIGLE PROJ_CLASSES.SIGLE%TYPE, UPDANNEE PROJ_CLASSES.ANNEE%TYPE, UPDORIENTATION PROJ_CLASSES.ORIENTATION%TYPE, WHRSIGLE PROJ_CLASSES.SIGLE%TYPE)

IS

  BEGIN

    UPDATE PROJ_CLASSES SET SIGLE = UPDSIGLE, ANNEE = UPDANNEE, ORIENTATION = UPDORIENTATION WHERE SIGLE = WHRSIGLE;
    COMMIT;

  END;

/
CREATE OR REPLACE PROCEDURE PROJ_MAJENSEIGNANT(UPDID_PROF PROJ_ENSEIGNANT.ID_PROF%TYPE, UPDNOM PROJ_ENSEIGNANT.NOM%TYPE, UPDPRENOM PROJ_ENSEIGNANT.PRENOM%TYPE, WHRID_PROF PROJ_ENSEIGNANT.ID_PROF%TYPE)

IS

  BEGIN

    UPDATE PROJ_ENSEIGNANT SET ID_PROF = UPDID_PROF, NOM = UPDNOM, PRENOM = UPDPRENOM WHERE ID_PROF = WHRID_PROF;
    COMMIT;

  END;

-- -----------------------------------------------------------------------------
--									COMMIT
-- -----------------------------------------------------------------------------
/
COMMIT;

-- -----------------------------------------------------------------------------
--                FIN DE GENERATION
-- -----------------------------------------------------------------------------